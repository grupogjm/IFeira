// Generated by view binder compiler. Do not edit!
package com.example.ifeira.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ifeira.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRecoveryBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button ButtonBack;

  @NonNull
  public final Button buttonSendEmail;

  @NonNull
  public final TextInputEditText inputEmail;

  @NonNull
  public final TextView recoveryLabel;

  private ActivityRecoveryBinding(@NonNull ConstraintLayout rootView, @NonNull Button ButtonBack,
      @NonNull Button buttonSendEmail, @NonNull TextInputEditText inputEmail,
      @NonNull TextView recoveryLabel) {
    this.rootView = rootView;
    this.ButtonBack = ButtonBack;
    this.buttonSendEmail = buttonSendEmail;
    this.inputEmail = inputEmail;
    this.recoveryLabel = recoveryLabel;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRecoveryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRecoveryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_recovery, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRecoveryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ButtonBack;
      Button ButtonBack = ViewBindings.findChildViewById(rootView, id);
      if (ButtonBack == null) {
        break missingId;
      }

      id = R.id.button_send_email;
      Button buttonSendEmail = ViewBindings.findChildViewById(rootView, id);
      if (buttonSendEmail == null) {
        break missingId;
      }

      id = R.id.input_email;
      TextInputEditText inputEmail = ViewBindings.findChildViewById(rootView, id);
      if (inputEmail == null) {
        break missingId;
      }

      id = R.id.recovery_label;
      TextView recoveryLabel = ViewBindings.findChildViewById(rootView, id);
      if (recoveryLabel == null) {
        break missingId;
      }

      return new ActivityRecoveryBinding((ConstraintLayout) rootView, ButtonBack, buttonSendEmail,
          inputEmail, recoveryLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
